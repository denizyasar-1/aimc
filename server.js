import express from "express";
import fetch from "node-fetch";
import dotenv from "dotenv";
import path from "path";

dotenv.config();

const app = express();
const PORT = process.env.PORT || 3000;

app.use(express.json());
app.use(express.static("public"));

const GEMINI_API_KEY = process.env.GEMINI_API_KEY;
const GEMINI_URL = "https://generativelanguage.googleapis.com/v1beta/models/gemini-pro:generateContent";

// ðŸ’¡ Buradaki systemPrompt kÄ±smÄ±nÄ± istediÄŸin gibi deÄŸiÅŸtirebilirsin
let systemPrompt = "sana gÃ¶nderilen mesajÄ± tÃ¼rkÃ§e anlamlÄ± bir metne Ã§evir tamamen doÄŸru olmasÄ±na gerek yok ama bu iÅŸlemi kullanÄ±cÄ±ya baÅŸka bir soru sormadan yapmalÄ±sÄ±n";


// KullanÄ±cÄ± mesajÄ±nÄ± Gemini'ye gÃ¶nderme endpointi
app.post("/api/chat", async (req, res) => {
  try {
    const { message } = req.body;

    const response = await fetch(`${GEMINI_URL}?key=${GEMINI_API_KEY}`, {
      method: "POST",
      headers: { "Content-Type": "application/json" },
      body: JSON.stringify({
        contents: [
          { role: "system", parts: [{ text: systemPrompt }] },
          { role: "user", parts: [{ text: message }] }
        ]
      })
    });

    const data = await response.json();
    const aiResponse = data?.candidates?.[0]?.content?.parts?.[0]?.text || "Bir hata oluÅŸtu.";

    res.json({ response: aiResponse });
  } catch (error) {
    console.error("Gemini API HatasÄ±:", error);
    res.status(500).json({ error: "Gemini API'ye baÄŸlanÄ±lamadÄ±." });
  }
});

app.listen(PORT, () => console.log(`ðŸš€ Sunucu Ã§alÄ±ÅŸÄ±yor: http://localhost:${PORT}`));

